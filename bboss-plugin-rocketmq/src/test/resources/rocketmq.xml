<properties>
    
    <property name="consumerPropes">
        <propes>
            <!-- 
                   消费端扩展配置，暂时不用，可用于序列化和反序列化参数配置
             -->


            <property name="extendparam" value="30000">
                <description> <![CDATA[  消费端扩展配置，暂时不用，可用于序列化和反序列化参数配置.]]></description>
            </property>
         

        </propes>
    </property>
 
    <!--  
    
    workThreads: 每个接收消息线程会派生workThreads个线程来处理接收到消息
              f:maxPollRecords="1000"  每次从Rocketmq拉取的消息数量
              
   consumeFromWhere：拉取消息的开始位置，取值范围
            
    CONSUME_FROM_LAST_OFFSET,

    @Deprecated
    CONSUME_FROM_LAST_OFFSET_AND_FROM_MIN_WHEN_BOOT_FIRST,
    @Deprecated
    CONSUME_FROM_MIN_OFFSET,
    @Deprecated
    CONSUME_FROM_MAX_OFFSET,
    CONSUME_FROM_FIRST_OFFSET,
    CONSUME_FROM_TIMESTAMP,
    
    etltopic
    
    f:tag="A"
              f:topic="TestTopic"
    -->
    <property name="rocketmqconsumer"
              class="org.frameworkset.rocketmq.TestRocketmqConsumer2ndStore" 
              f:consumerPropes="attr:consumerPropes"
              f:tag="A"
              f:topic="TestTopic,TestTopic1"
              f:consumerGroup="etlgroup"
              f:accessKey="Rocketmq"
              f:secretKey="12345678"
              f:namesrvAddr="172.24.176.18:9876"
              f:maxPollRecords="100"  
              f:consumeMessageBatchMaxSize="50"
              f:consumeFromWhere="CONSUME_FROM_LAST_OFFSET"
              f:workThreads="10"
              f:keyDeserializer="org.frameworkset.rocketmq.codec.StringCodecDeserial"
              f:valueDeserializer="org.frameworkset.rocketmq.codec.StringCodecDeserial"
    />
</properties>